<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="iconos.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>13, 17</value>
  </metadata>
  <data name="iconos.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABE
        DAAAAk1TRnQBSQFMAgEBAgEAAZABAAGQAQABIAEAASABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAGA
        AwABIAMAAQEBAAEgBgABQDIAAzwBZAT/A18B0ygAA18B0wT/AzwBZP8AwQADNAFUA1oBvwNTAacoAANT
        AacDWgG/AzQBVP8ApQADTgGWA1oBvwMtAUQMAAMSARcDIQEwAyEBMAMhATADIQEwAyEBMAMhATADIQEw
        AyEBMAMhATADIQEwAyEBMAMhATADIQEwAyEBMAMhATADIQEwAxIBFwwAAywBQwNaAb8DTgGWMAAEAQMY
        ASADLgFGAzwBZANDAXUDRwGAA0QBeQM+AWsDMwFRAx4BKwMCAQP/AC0AA2MB3wT/A0EBcAwAA1EBnkD/
        A1EBngwAA0EBcAT/A2MB3yQAAxsBJgNCAXQDWgG3A28B7iT/A3sB8gNVAa8DNQFVAwMBBP8AOQADUQGf
        A4EB9AMuAUgDEQEWA1EBnAT/AzEBTBAAAzEBTAT/A1EBnAMRARYDLgFIA4EB9ANRAZ88AANhAc88/wMq
        AUD/AB0AA2IB3ANjAd8DYwHfA2MB3wNjAd8DYwHfAy4BRgNRAZ8DVAGmAyQBNQNXAbEDEgEXBP8DcgHw
        A2MB3wNjAd8DYwHfA2MB3wNyAfAE/wMSARcDVwGyAyQBNQNUAaYDUQGfAy4BRgNjAd8DYwHfA2MB3wNj
        Ad8DYwHfA2IB3CAAA2EBzzz/AyoBQP8AHQAE/wNmAeADOwFiA0QBewOlAfkDZQHiAxQBGwNRAZ8DYQHR
        AwwBEAMkATUDLgFIBP8DRwGCAzMBUAMzAVADMwFQAzMBUANHAYIE/wMuAUgDJAE1AwwBEANhAdEDUQGf
        AxQBGwNlAeIDpQH5A0QBewM7AWIDYwHhBP8gAANhAc88/wMqAUD/AB0ABP8DMAFKAzoBYQMjATMDTQGS
        A4UB9QMwAUsDQwF1BP8DYQHRA1QBpgOBAfQE/wNaAb0DUQGfA1EBnwNRAZ8DUQGfA1oBvQT/A4EB9ANU
        AaYDYQHRBP8DQwF1AzABSwOFAfUDTQGRAyMBMwM6AWEDMAFKBP8MAAMZASIDMgFPA0MBdQNLAYsDDwEU
        A2EBzzz/AyoBQAM/AWwDSwGMA0EBcQMuAUgDDgES/wAJAAT/AzABSgM6AWEDIwEzA00BkgOFAfUDRAF3
        AwUBBgNCAXQDUQGfA1EBnwNRAZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNRAZ8DUQGf
        A1EBnwNCAXQDBQEGA0QBdwOFAfUDTQGRAyMBMwM6AWEDMAFKBP8DOgFhA1QBqANpAekQ/wMYASADYQHP
        PP8DKgFAA1UBrwz/A8kB/QNcAcMDOwFj/wABAAOFAfUDZgHgAzsBYgNEAXsDpQH5A2UB4gMzAVIDMwFQ
        AysBQQMDAQQDMwFQAzMBUAMzAVADMwFQAzMBUAMzAVADMwFQAzMBUAMzAVADMwFQAzMBUAMzAVADAwEE
        AysBQQMzAVADMwFSA2UB4gOlAfkDRAF7AzsBYgNmAeADhQH1HP8DIQEwA1oBvzz/AycBOgNXAbUY//8A
        AQADOQRfAdgDYwHfA2MB3wNjAd8DYwHfA2MB3wNjAd8DXwHYAwcBCQNiAdco/wNiAdcDBwEJA18B2ANj
        Ad8DYwHfA2MB3wNjAd8DYwHfA2MB3wNfAdgDOQFfHP8DNgFYA00Bkjj/A7YB+wMMAQ8DYwHfGP//ACkA
        A0gBgyj/A0gBgygAHP8DUwGnAyUBNgPbAf40/wNVAa0DIgExHP//AAkAAzkBXRj/A1cBsgMgAS0o/wMg
        AS0DVwGyGP8DOQFdCAAc/wO2AfsDHgErA04BmDD/A3EB7wMYASEDVQGvHP//AAkAAwwBDwOdAfgU/wOd
        AfgDDQERA1IBoANaAb8DWgG/A1oBvwNaAb8DWgG/A1oBvwNaAb8DWgG/A1IBoAMNAREDnQH4FP8DnQH4
        AwwBDwgAIP8DYQHRAxABFQNSAaEo/wNqAeYDJQE3AzwBZiD//wANAANXAbIY/wNXAbEDJQE3AyEBMAMY
        ASEQAAMYBCEBMAMlATcDVgGwGP8DVwGyDAADnQH4IP8DXQHMAxoBIwMuAUcDVQGtA2UB4wNxAe8DcQHv
        A3EB7wNxAe8DbwHuA10BzANHAYADDwETA0QBeAPAAfwc/wOdAfj/AA0AAzYBVyT/A0UBfBAAA0UBfCT/
        AzYBVwwAA1wBwyT/A4sB9gNOAZQDDAEQAwoBDQNDAXYDWQG5A18ByANRAZ4DJQE3BAADMQFNA2EB0ST/
        A1wBw/8AKQADCwEOAwwBEAMMAQ8YAAMMAQ8EAiwAAzkBXSj/A1EBnAMaASMDYQHeEP8D2wH+A0QBdwMf
        ASwDmQH3JP8DOQFd/wCBAAQBA1kBtiD/A3sB8gMOARIDXgHNHP8DLwFJA0sBiiD/A1kBtgQB/wCFAAMI
        AQoDVAGoHP8DVAGmAywBQyD/A1kBuwMgAS4c/wNUAagDCAEK/wAlAANKAYkDUQGfA1EBnwNRAZ8DUQGf
        A1EBnwNRAZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNKAYksAAMpAT0DTgGWA1sBwANh
        Ac8DYQHPA2EBzwNhAc8DOwFjA0QBdyD/A20B6wMDAQQDYQHPA2EBzwNhAc8DYQHPA1sBwANOAZYDKQE9
        /wAtAANiAdw4/wNiAdw0AAMpAT0DVwGxA2kB6QNnAeoDVgGwAyMBMwNCAXIg/wNpAekDBQEGA1YBsANp
        AekDaQHpA1cBsQMpAT3/ADUAAysBQQPbAf4U/wNSAaEDUgGhFP8D2wH+AysBQTAAAzwBZgPJAf0Q/wNX
        AbIDJAE1IP8DVgGuAycBORD/A8kB/QM8AWb/ADUAA04BmBT/A2cB6gNnAeoU/wNOAZgwAAMdASkDqwH6
        FP8DpQH5AxcBHwNZAbYY/wO2AfsDJQE2A1EBnhT/A6sB+gMdASn/ADEAAwsBDgNjAeEQ/wNdAccDXQHH
        EP8DYwHhAwsBDjAAA0kBiBz/A1gBuAMQARUDWwHAEP8DhQH1AzYBWAMuAUcDyQH9GP8DSQGI/wA1AAMw
        AUsQ/wNBAXADQQFwEP8DMAFLNAADVwGyIP8DTQGTBAIDMwFQA04BlANRAZ4DRAF5AxQBGwMzAVEDhQH1
        HP8DWAGz/wA5AANSAaEM/wNBAXADQQFwDP8DUgGhOAADVAGmIP8DVAGmGAADVAGmIP8DVAGm/wA5AAMP
        ARMDagHnCP8DQQFwA0EBcAj/A2oB5wMPARM4AAM7AWMg/wM7AWMYAAM7AWMg/wM8AWT/AD0AAzQBVAj/
        A0EBcANBAXAI/wM0AVQ8AAMFAQYDYQHRGP8DXgHSAwYBBxgAAwUBBgNhAdEY/wNeAdIDBgEH/wBBAANW
        AasE/wNEAXoDRAF6BP8DVgGrRAADFAEbA1wBxBD/A1wBxAMUARsgAAMUARsDXAHDEP8DXAHEAxQBG/8A
        RQADEgEYA28B7AOlAfkDpQH5A28B7AMSARhIAAQBAyoBPwNEAXcDRAF3AyoBPwQBKAAEAQMqAT8DRAF3
        A0QBdwMqAT8EAf8ATQADOQFdCP8DOQFe/wD1AANXAbIDVwGy/wC9AAFCAU0BPgcAAT4DAAEoAwABgAMA
        ASADAAEBAQABAQYAAQIWAAP/AQAB/wEfAfgF/wgAAf8BHwH4Bf8IAAGOAgABcQH/AeABAwH/CAABjgIA
        AXEB/wIAAX8IAAH+AQMBwAF/Af8CAAF/DAAB/wIAAX8MAAH/AgABfwwAAeACAAEDOAAB/wHAAQMB/wwA
        AcACAAEDDAABwAIAAQMMAAHgAQMBwAEHDAAB4AEDAcABBwIAARAJAAH/AccB5wH/DAAE/wwABP8BgAIA
        AQEIAAH/AgAB/wHgAgABBwgAAf8CAAH/AfgCAAEfCAAB/wIAAf8B8AIAAQ8IAAH/AYABAQH/AeACAAEH
        CAAB/wGAAQEB/wHgAgABBwgAAf8BwAEDAf8B4AIAAQcIAAH/AeABBwH/AeABBwHgAQcIAAH/AeABBwH/
        AeABBwHgAQcIAAH/AfABDwH/AeABBwHgAQcIAAH/AfgBHwH/AfABDwHwAQ8IAAH/AfgBHwH/AfgBHwH4
        AR8IAAH/AfwBPwX/CAAB/wH+AX8F/wgACw==
</value>
  </data>
</root>