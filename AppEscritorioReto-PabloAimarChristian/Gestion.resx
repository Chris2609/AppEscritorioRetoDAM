<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="iconos.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>13, 17</value>
  </metadata>
  <data name="iconos.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABC
        DAAAAk1TRnQBSQFMAgEBAgEAASgBAQEoAQEBIAEAASABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAGA
        AwABIAMAAQEBAAEgBgABQDIAAzwBZAT/A18B0ygAA18B0wT/AzwBZP8AwQADNAFUA1oBvwNTAacoAANT
        AacDWgG/AzQBVP8ApQADTgGWA1oBvwMtAUQMAAMSARcDIQEwAyEBMAMhATADIQEwAyEBMAMhATADIQEw
        AyEBMAMhATADIQEwAyEBMAMhATADIQEwAyEBMAMhATADIQEwAxIBFwwAAywBQwNaAb8DTgGWMAAEAQMY
        ASADLgFGAzwBZANDAXUDRwGAA0QBeQM+AWsDMwFRAx4BKwMCAQP/AC0AA2MB3wT/A0EBcAwAA1EBnkD/
        A1EBngwAA0EBcAT/A2MB3yQAAxsBJgNCAXQDWgG3A2IB7iT/A2sB8gNVAa8DNQFVAwMBBP8AOQADUQGf
        A2gB9AMuAUgDEQEWA1EBnAT/AzEBTBAAAzEBTAT/A1EBnAMRARYDLgFIA2gB9ANRAZ88AANhAc88/wMq
        AUD/AB0AA2IB3ANjAd8DYwHfA2MB3wNjAd8DYwHfAy4BRgNRAZ8DVAGmAyQBNQNXAbEDEgEXBP8DaAHw
        A2MB3wNjAd8DYwHfA2MB3wNoAfAE/wMSARcDVwGyAyQBNQNUAaYDUQGfAy4BRgNjAd8DYwHfA2MB3wNj
        Ad8DYwHfA2IB3CAAA2EBzzz/AyoBQP8AHQAE/wNmAeADOwFiA0QBewOEAfkDZQHiAxQBGwNRAZ8DYQHR
        AwwBEAMkATUDLgFIBP8DRwGCAzMBUAMzAVADMwFQAzMBUANHAYIE/wMuAUgDJAE1AwwBEANhAdEDUQGf
        AxQBGwNlAeIDhAH5A0QBewM7BGIB4QT/IAADYQHPPP8DKgFA/wAdAAT/AzABSgM6AWEDIwEzA00BkgNu
        AfUDMAFLA0MBdQT/A2EB0QNUAaYDaAH0BP8DWgG9A1EBnwNRAZ8DUQGfA1EBnwNaAb0E/wNoAfQDVAGm
        A2EB0QT/A0MBdQMwAUsDbgH1A00BkQMjATMDOgFhAzABSgT/DAADGQEiAzIBTwNDAXUDSwGLAw8BFANh
        Ac88/wMqAUADPwFsA0sBjANBAXEDLgFIAw4BEv8ACQAE/wMwAUoDOgFhAyMBMwNNAZIDbgH1A0QBdwMF
        AQYDQgF0A1EBnwNRAZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNR
        AZ8DQgF0AwUBBgNEAXcDbgH1A00BkQMjATMDOgFhAzABSgT/AzoBYQNUAagDYwHpEP8DGAEgA2EBzzz/
        AyoBQANVAa8M/wO+Af0DXAHDAzsBY/8AAQADbgH1A2YB4AM7AWIDRAF7A4QB+QNlAeIDMwFSAzMBUAMr
        AUEDAwEEAzMBUAMzAVADMwFQAzMBUAMzAVADMwFQAzMBUAMzAVADMwFQAzMBUAMzAVADMwFQAwMBBAMr
        AUEDMwFQAzMBUgNlAeIDhAH5A0QBewM7AWIDZgHgA24B9Rz/AyEBMANaAb88/wMnAToDVwG1GP//AAEA
        AzkEXwHYA2MB3wNjAd8DYwHfA2MB3wNjAd8DYwHfA18B2AMHAQkDYgHXKP8DYgHXAwcBCQNfAdgDYwHf
        A2MB3wNjAd8DYwHfA2MB3wNjAd8DXwHYAzkBXxz/AzYBWANNAZI4/wORAfsDDAEPA2MB3xj//wApAANI
        AYMo/wNIAYMoABz/A1MBpwMlATYDtQH+NP8DVQGtAyIBMRz//wAJAAM5AV0Y/wNXAbIDIAEtKP8DIAEt
        A1cBshj/AzkBXQgAHP8DkQH7Ax4BKwNOAZgw/wNnAe8DGAEhA1UBrxz//wAJAAMMAQ8DfAH4FP8DfAH4
        Aw0BEQNSAaADWgG/A1oBvwNaAb8DWgG/A1oBvwNaAb8DWgG/A1oBvwNSAaADDQERA3wB+BT/A3wB+AMM
        AQ8IACD/A2EB0QMQARUDUgGhKP8DagHmAyUBNwM8AWYg//8ADQADVwGyGP8DVwGxAyUBNwMhATADGAEh
        EAADGAQhATADJQE3A1YBsBj/A1cBsgwAA3wB+CD/A10BzAMaASMDLgFHA1UBrQNlAeMDZwHvA2cB7wNn
        Ae8DZwHvA2IB7gNdAcwDRwGAAw8BEwNEAXgDkgH8HP8DfAH4/wANAAM2AVck/wNFAXwQAANFAXwk/wM2
        AVcMAANcAcMk/wNpAfYDTgGUAwwBEAMKAQ0DQwF2A1kBuQNfAcgDUQGeAyUBNwQAAzEBTQNhAdEk/wNc
        AcP/ACkAAwsBDgMMARADDAEPGAADDAEPBAIsAAM5AV0o/wNRAZwDGgEjA2EB3hD/A7UB/gNEAXcDHwEs
        A3kB9yT/AzkBXf8AgQAEAQNZAbYg/wNrAfIDDgESA14BzRz/Ay8BSQNLAYog/wNZAbYEAf8AhQADCAEK
        A1QBqBz/A1QBpgMsAUMg/wNZAbsDIAEuHP8DVAGoAwgBCv8AJQADSgGJA1EBnwNRAZ8DUQGfA1EBnwNR
        AZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNRAZ8DSgGJLAADKQE9A04BlgNbAcADYQHP
        A2EBzwNhAc8DYQHPAzsBYwNEAXcg/wNsAesDAwEEA2EBzwNhAc8DYQHPA2EBzwNbAcADTgGWAykBPf8A
        LQADYgHcOP8DYgHcNAADKQE9A1cBsQNjAekDZwHqA1YBsAMjATMDQgFyIP8DYwHpAwUBBgNWAbADYwHp
        A2MB6QNXAbEDKQE9/wA1AAMrAUEDtQH+FP8DUgGhA1IBoRT/A7UB/gMrAUEwAAM8AWYDvgH9EP8DVwGy
        AyQBNSD/A1YBrgMnATkQ/wO+Af0DPAFm/wA1AANOAZgU/wNnAeoDZwHqFP8DTgGYMAADHQEpA30B+hT/
        A4QB+QMXAR8DWQG2GP8DkQH7AyUBNgNRAZ4U/wN9AfoDHQEp/wAxAAMLAQ4DYgHhEP8DXQHHA10BxxD/
        A2IB4QMLAQ4wAANJAYgc/wNYAbgDEAEVA1sBwBD/A24B9QM2AVgDLgFHA74B/Rj/A0kBiP8ANQADMAFL
        EP8DQQFwA0EBcBD/AzABSzQAA1cBsiD/A00BkwQCAzMBUANOAZQDUQGeA0QBeQMUARsDMwFRA24B9Rz/
        A1gBs/8AOQADUgGhDP8DQQFwA0EBcAz/A1IBoTgAA1QBpiD/A1QBphgAA1QBpiD/A1QBpv8AOQADDwET
        A2UB5wj/A0EBcANBAXAI/wNlAecDDwETOAADOwFjIP8DOwFjGAADOwFjIP8DPAFk/wA9AAM0AVQI/wNB
        AXADQQFwCP8DNAFUPAADBQEGA2EB0Rj/A14B0gMGAQcYAAMFAQYDYQHRGP8DXgHSAwYBB/8AQQADVgGr
        BP8DRAF6A0QBegT/A1YBq0QAAxQBGwNcAcQQ/wNcAcQDFAEbIAADFAEbA1wBwxD/A1wBxAMUARv/AEUA
        AxIBGANlAewDhAH5A4QB+QNlAewDEgEYSAAEAQMqAT8DRAF3A0QBdwMqAT8EASgABAEDKgE/A0QBdwNE
        AXcDKgE/BAH/AE0AAzkBXQj/AzkBXv8A9QADVwGyA1cBsv8AvQABQgFNAT4HAAE+AwABKAMAAYADAAEg
        AwABAQEAAQEGAAECFgAD/wEAAf8BHwH4Bf8IAAH/AR8B+AX/CAABjgIAAXEB/wHgAQMB/wgAAY4CAAFx
        Af8CAAF/CAAB/gEDAcABfwH/AgABfwwAAf8CAAF/DAAB/wIAAX8MAAHgAgABAzgAAf8BwAEDAf8MAAHA
        AgABAwwAAcACAAEDDAAB4AEDAcABBwwAAeABAwHAAQcCAAEQCQAB/wHHAecB/wwABP8MAAT/AYACAAEB
        CAAB/wIAAf8B4AIAAQcIAAH/AgAB/wH4AgABHwgAAf8CAAH/AfACAAEPCAAB/wGAAQEB/wHgAgABBwgA
        Af8BgAEBAf8B4AIAAQcIAAH/AcABAwH/AeACAAEHCAAB/wHgAQcB/wHgAQcB4AEHCAAB/wHgAQcB/wHg
        AQcB4AEHCAAB/wHwAQ8B/wHgAQcB4AEHCAAB/wH4AR8B/wHwAQ8B8AEPCAAB/wH4AR8B/wH4AR8B+AEf
        CAAB/wH8AT8F/wgAAf8B/gF/Bf8IAAs=
</value>
  </data>
</root>