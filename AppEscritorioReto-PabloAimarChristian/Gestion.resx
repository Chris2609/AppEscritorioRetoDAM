<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="iconos.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>13, 17</value>
  </metadata>
  <data name="iconos.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA+
        DAAAAk1TRnQBSQFMAgEBAgEAAWABAQFgAQEBIAEAASABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAGA
        AwABIAMAAQEBAAEgBgABQDIAAzwBZAT/A18B0ygAA18B0wT/AzwBZP8AwQADNAFUA1oBvwNTAacoAANT
        AacDWgG/AzQBVP8ApQADTgGWA1oBvwMtAUQMAAMSARcDIQEwAyEBMAMhATADIQEwAyEBMAMhATADIQEw
        AyEBMAMhATADIQEwAyEBMAMhATADIQEwAyEBMAMhATADIQEwAxIBFwwAAywBQwNaAb8DTgGWMAAEAQMY
        ASADLgFGAzwBZANDAXUDRwGAA0QBeQM+AWsDMwFRAx4BKwMCAQP/AC0AA2MB3wT/A0EBcAwAA1EBnkD/
        A1EBngwAA0EBcAT/A2MB3yQAAxsBJgNCAXQDWgG3A2IB7iT/A2sB8gNVAa8DNQFVAwMBBP8AOQADUQGf
        A2gB9AMuAUgDEQEWA1EBnAT/AzEBTBAAAzEBTAT/A1EBnAMRARYDLgFIA2gB9ANRAZ88AANhAc88/wMq
        AUD/AB0AA2IB3ANjAd8DYwHfA2MB3wNjAd8DYwHfAy4BRgNRAZ8DVAGmAyQBNQNXAbEDEgEXBP8DaAHw
        A2MB3wNjAd8DYwHfA2MB3wNoAfAE/wMSARcDVwGyAyQBNQNUAaYDUQGfAy4BRgNjAd8DYwHfA2MB3wNj
        Ad8DYwHfA2IB3CAAA2EBzzz/AyoBQP8AHQAE/wNmAeADOwFiA0QEewH5A2UB4gMUARsDUQGfA2EB0QMM
        ARADJAE1Ay4BSAT/A0cBggMzAVADMwFQAzMBUAMzAVADRwGCBP8DLgFIAyQBNQMMARADYQHRA1EBnwMU
        ARsDZQHiA3sB+QNEAXsDOwRiAeEE/yAAA2EBzzz/AyoBQP8AHQAE/wMwAUoDOgFhAyMBMwNNAZIDbgH1
        AzABSwNDAXUE/wNhAdEDVAGmA2gB9AT/A1oBvQNRAZ8DUQGfA1EBnwNRAZ8DWgG9BP8DaAH0A1QBpgNh
        AdEE/wNDAXUDMAFLA24B9QNNAZEDIwEzAzoBYQMwAUoE/wwAAxkBIgMyAU8DQwF1A0sBiwMPARQDYQHP
        PP8DKgFAAz8BbANLAYwDQQFxAy4BSAMOARL/AAkABP8DMAFKAzoBYQMjATMDTQGSA24B9QNEAXcDBQEG
        A0IBdANRAZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNRAZ8DUQGf
        A0IBdAMFAQYDRAF3A24B9QNNAZEDIwEzAzoBYQMwAUoE/wM6AWEDVAGoA2MB6RD/AxgBIANhAc88/wMq
        AUADVQGvDP8DvgH9A1wBwwM7AWP/AAEAA24B9QNmAeADOwFiA0QEewH5A2UB4gMzAVIDMwFQAysBQQMD
        AQQDMwFQAzMBUAMzAVADMwFQAzMBUAMzAVADMwFQAzMBUAMzAVADMwFQAzMBUAMzAVADAwEEAysBQQMz
        AVADMwFSA2UB4gN7AfkDRAF7AzsBYgNmAeADbgH1HP8DIQEwA1oBvzz/AycBOgNXAbUY//8AAQADOQRf
        AdgDYwHfA2MB3wNjAd8DYwHfA2MB3wNjAd8DXwHYAwcBCQNiAdco/wNiAdcDBwEJA18B2ANjAd8DYwHf
        A2MB3wNjAd8DYwHfA2MB3wNfAdgDOQFfHP8DNgFYA00Bkjj/A4oB+wMMAQ8DYwHfGP//ACkAA0gBgyj/
        A0gBgygAHP8DUwGnAyUBNgOnAf40/wNVAa0DIgExHP//AAkAAzkBXRj/A1cBsgMgAS0o/wMgAS0DVwGy
        GP8DOQFdCAAc/wOKAfsDHgErA04BmDD/A2cB7wMYASEDVQGvHP//AAkAAwwBDwN8AfgU/wN8AfgDDQER
        A1IBoANaAb8DWgG/A1oBvwNaAb8DWgG/A1oBvwNaAb8DWgG/A1IBoAMNAREDfAH4FP8DfAH4AwwBDwgA
        IP8DYQHRAxABFQNSAaEo/wNqAeYDJQE3AzwBZiD//wANAANXAbIY/wNXAbEDJQE3AyEBMAMYASEQAAMY
        BCEBMAMlATcDVgGwGP8DVwGyDAADfAH4IP8DXQHMAxoBIwMuAUcDVQGtA2UB4wNnAe8DZwHvA2cB7wNn
        Ae8DYgHuA10BzANHAYADDwETA0QBeAN+Afwc/wN8Afj/AA0AAzYBVyT/A0UBfBAAA0UBfCT/AzYBVwwA
        A1wBwyT/A2MB9gNOAZQDDAEQAwoBDQNDAXYDWQG5A18ByANRAZ4DJQE3BAADMQFNA2EB0ST/A1wBw/8A
        KQADCwEOAwwBEAMMAQ8YAAMMAQ8EAiwAAzkBXSj/A1EBnAMaASMDYQHeEP8DpwH+A0QBdwMfASwDbwH3
        JP8DOQFd/wCBAAQBA1kBtiD/A2sB8gMOARIDXgHNHP8DLwFJA0sBiiD/A1kBtgQB/wCFAAMIAQoDVAGo
        HP8DVAGmAywBQyD/A1kBuwMgAS4c/wNUAagDCAEK/wAlAANKAYkDUQGfA1EBnwNRAZ8DUQGfA1EBnwNR
        AZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNRAZ8DUQGfA1EBnwNKAYksAAMpAT0DTgGWA1sBwANhAc8DYQHP
        A2EBzwNhAc8DOwFjA0QBdyD/A2wB6wMDAQQDYQHPA2EBzwNhAc8DYQHPA1sBwANOAZYDKQE9/wAtAANi
        Adw4/wNiAdw0AAMpAT0DVwGxA2MB6QNnAeoDVgGwAyMBMwNCAXIg/wNjAekDBQEGA1YBsANjAekDYwHp
        A1cBsQMpAT3/ADUAAysBQQOnAf4U/wNSAaEDUgGhFP8DpwH+AysBQTAAAzwBZgO+Af0Q/wNXAbIDJAE1
        IP8DVgGuAycBORD/A74B/QM8AWb/ADUAA04BmBT/A2cB6gNnAeoU/wNOAZgwAAMdASkDfQH6FP8DewH5
        AxcBHwNZAbYY/wOKAfsDJQE2A1EBnhT/A30B+gMdASn/ADEAAwsBDgNiAeEQ/wNdAccDXQHHEP8DYgHh
        AwsBDjAAA0kBiBz/A1gBuAMQARUDWwHAEP8DbgH1AzYBWAMuAUcDvgH9GP8DSQGI/wA1AAMwAUsQ/wNB
        AXADQQFwEP8DMAFLNAADVwGyIP8DTQGTBAIDMwFQA04BlANRAZ4DRAF5AxQBGwMzAVEDbgH1HP8DWAGz
        /wA5AANSAaEM/wNBAXADQQFwDP8DUgGhOAADVAGmIP8DVAGmGAADVAGmIP8DVAGm/wA5AAMPARMDZQHn
        CP8DQQFwA0EBcAj/A2UB5wMPARM4AAM7AWMg/wM7AWMYAAM7AWMg/wM8AWT/AD0AAzQBVAj/A0EBcANB
        AXAI/wM0AVQ8AAMFAQYDYQHRGP8DXgHSAwYBBxgAAwUBBgNhAdEY/wNeAdIDBgEH/wBBAANWAasE/wNE
        AXoDRAF6BP8DVgGrRAADFAEbA1wBxBD/A1wBxAMUARsgAAMUARsDXAHDEP8DXAHEAxQBG/8ARQADEgEY
        A2UB7AN7AfkDewH5A2UB7AMSARhIAAQBAyoBPwNEAXcDRAF3AyoBPwQBKAAEAQMqAT8DRAF3A0QBdwMq
        AT8EAf8ATQADOQFdCP8DOQFe/wD1AANXAbIDVwGy/wC9AAFCAU0BPgcAAT4DAAEoAwABgAMAASADAAEB
        AQABAQYAAQIWAAP/AQAB/wEfAfgF/wgAAf8BHwH4Bf8IAAGOAgABcQH/AeABAwH/CAABjgIAAXEB/wIA
        AX8IAAH+AQMBwAF/Af8CAAF/DAAB/wIAAX8MAAH/AgABfwwAAeACAAEDOAAB/wHAAQMB/wwAAcACAAED
        DAABwAIAAQMMAAHgAQMBwAEHDAAB4AEDAcABBwIAARAJAAH/AccB5wH/DAAE/wwABP8BgAIAAQEIAAH/
        AgAB/wHgAgABBwgAAf8CAAH/AfgCAAEfCAAB/wIAAf8B8AIAAQ8IAAH/AYABAQH/AeACAAEHCAAB/wGA
        AQEB/wHgAgABBwgAAf8BwAEDAf8B4AIAAQcIAAH/AeABBwH/AeABBwHgAQcIAAH/AeABBwH/AeABBwHg
        AQcIAAH/AfABDwH/AeABBwHgAQcIAAH/AfgBHwH/AfABDwHwAQ8IAAH/AfgBHwH/AfgBHwH4AR8IAAH/
        AfwBPwX/CAAB/wH+AX8F/wgACw==
</value>
  </data>
</root>